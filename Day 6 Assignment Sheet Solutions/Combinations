                                                                                             Code

class Solution {
    public void helper(int idx,int k,int n,ArrayList<List<Integer>> l1 ,ArrayList<Integer> ds ){
        if(ds.size()==k){
            l1.add(new ArrayList<>(ds));
            return;
        }
        for(int i=idx;i<=n;i++){
            ds.add(i);
            helper(i+1,k,n,l1,ds);
            ds.remove(ds.size()-1);
        }
    }
    public List<List<Integer>> combine(int n, int k) {
        ArrayList<List<Integer>> l1 = new ArrayList<>();
        ArrayList<Integer> ds = new ArrayList<>();
        helper(1,k,n,l1,ds);
        return l1;


    }
}

                                                                                      
                                                                                      Complexity Analysis

Time Complexity :  O(C(n,k)*k)
Space Complexity : O(C(n,k)*k)


                                                                                            Testcases

Testcase 1

Input

n = 4
k = 2

Output
[[1,2],[1,3],[1,4],[2,3],[2,4],[3,4]]
Expected
[[1,2],[1,3],[1,4],[2,3],[2,4],[3,4]]


Testcase 2

Input

n = 1
k = 1

Output
[[1]]
Expected
[[1]]
