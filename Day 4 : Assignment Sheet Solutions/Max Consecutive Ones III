                                                                                            Code

class Solution {
    public int longestOnes(int[] nums, int k) {
        int l = 0;
        int r = 0;
        int max = Integer.MIN_VALUE;

        int cnt_zero = 0;

        while (r < nums.length) {
            if (nums[r] == 0) {
                cnt_zero++;
            }
            while (cnt_zero > k) {
                if (nums[l] == 0) {
                    cnt_zero--;
                }
                l++;
            }

            max = Math.max(max, r - l + 1);
            r++;
        }
        return max;

    }
}

                                                                                          Complexity Analysis


Time Complexity :  O(n)
Space Complexity : O(1)
 
                                                                                               Testcases


Testcase 1

Input

nums = [1,1,1,0,0,0,1,1,1,1,0]
k = 2

Output
6
Expected
6

Testcase 2

Input

nums = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1]
k = 3

Output
10
Expected
10
